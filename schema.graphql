type Protocol @entity {
    id: ID!

    init: Boolean!

    epoch: Epoch!
    lastEpoch: Epoch!
    nextEpoch: Epoch!

    totalSwaps: BigInt!
    totalLoans: BigInt! #update
    totalUsers: BigInt!
    totalNuggs: BigInt!
    totalItems: BigInt!
    totalItemSwaps: BigInt!

    genesisBlock: BigInt!
    interval: BigInt!
    epochOffset: BigInt!

    nuggftUser: User!
    nullUser: User!
    dotnuggv1: User!
    xnuggftv1: User!

    featureTotals: [Int!]!

    dotnuggV1Processor: String! @deprecated

    nuggftTotalEth: BigInt!

    nuggftStakedUsdPerShare: BigInt!
    nuggftStakedUsd: BigInt!
    nuggftStakedEthPerShare: BigInt!
    nuggftStakedEth: BigInt!
    nuggftStakedShares: BigInt!

    priceUsdcWeth: BigInt!

    defaultActiveNugg: Nugg

    nuggsNotCached: [String!]!

    nuggsPendingRemoval: [String!]!

    activeNuggs: [Nugg!]! @derivedFrom(field: "protocol")
    activeNuggItems: [NuggItem!]! @derivedFrom(field: "protocol")
    activeItems: [Item!]! @derivedFrom(field: "protocol")
}

type Offer @entity {
    id: ID!

    txhash: String!

    swap: Swap!
    user: User!
    incrementX64: BigInt!
    eth: BigInt!
    ethUsd: BigInt!

    claimed: Boolean!

    owner: Boolean!
    claimer: User
}

enum EpochStatus {
    OVER
    ACTIVE
    PENDING
}

type Epoch @entity {
    id: ID!
    idnum: BigInt!

    startblock: BigInt!
    endblock: BigInt!
    status: EpochStatus!

    starttime: BigInt
    endtime: BigInt

    swaps: [Swap!]! @derivedFrom(field: "epoch")
    itemSwaps: [ItemSwap!]! @derivedFrom(field: "epoch")

    _activeSwaps: [String!]!
    _activeNuggItemSwaps: [String!]!
    _activeItemSwaps: [String!]!

    _upcomingActiveItemSwaps: [String!]!
}

type Item @entity {
    id: ID!

    live: Boolean!

    idnum: Int!
    feature: BigInt!
    position: BigInt!
    count: BigInt!
    dotnuggRawCache: String!
    dotnuggUtfCache: String
    rarityX16: BigInt!

    protocol: Protocol

    lastPrice: BigInt
    lastOfferBlock: BigInt
    lastOfferEpoch: BigInt
    # just to keep in the same format as the nuggs
    activeSnapshot: ItemSnapshot

    activeSwap: ItemSwap
    upcomingActiveSwap: ItemSwap

    swaps: [ItemSwap!]! @derivedFrom(field: "sellingItem")
}

type NuggItem @entity {
    id: ID!

    item: Item!
    nugg: Nugg!

    displayedSinceBlock: BigInt
    displayedSinceUnix: BigInt

    numSwaps: BigInt!
    displayed: Boolean!
    count: BigInt!

    protocol: Protocol
    activeSwap: ItemSwap

    swaps: [ItemSwap!]! @derivedFrom(field: "sellingNuggItem")
}

type Nugg @entity {
    id: ID!
    idnum: Int!

    live: Boolean!

    user: User!
    lastUser: User!

    protocol: Protocol
    activeSwap: Swap
    activeLoan: Loan

    lastPrice: BigInt
    lastOfferBlock: BigInt
    lastOfferEpoch: BigInt
    lastTransfer: Int!
    pendingClaim: Boolean!

    _tmp: Int!

    resolver: String

    dotnuggUtfCache: String

    dotnuggRawCache: String!

    activeSnapshot: NuggSnapshot

    snapshots: [NuggSnapshot!]! @derivedFrom(field: "nugg")

    numSwaps: BigInt!

    _items: [Int!]!
    _displayed: [Int!]!
    # nvsX64: BigInt!

    proof: BigInt

    burned: Boolean! #update
    swaps: [Swap!]! @derivedFrom(field: "nugg")

    items: [NuggItem!]! @derivedFrom(field: "nugg")

    offers: [ItemOffer!]! @derivedFrom(field: "nugg")

    loans: [Loan!]! @derivedFrom(field: "nugg")
}

type Swap @entity {
    id: ID!

    nugg: Nugg!

    offers: [Offer!]! @derivedFrom(field: "swap")

    epoch: Epoch
    endingEpoch: BigInt
    startingEpoch: Epoch
    canceledEpoch: BigInt

    commitBlock: BigInt
    numOffers: Int!

    top: BigInt!
    topUsd: BigInt!

    startUnix: BigInt

    num: BigInt!
    bottom: BigInt!
    bottomUsd: BigInt!

    eth: BigInt!
    ethUsd: BigInt!

    owner: User!

    leader: User!

    # incrementX64: BigInt!

    nextDelegateType: NextOfferType!
}

type UserActiveSwap @entity {
    id: ID!

    # user: User! #buyer
    # nugg: Nugg!

    activeId: ID!
}

type Loan @entity {
    id: ID!

    nugg: Nugg!

    user: User!

    epoch: Epoch!

    toPayoff: BigInt!
    toRebalance: BigInt!
    earned: BigInt!
    epochDue: BigInt!

    protocol: Protocol

    liquidated: Boolean!
    liquidatedBy: User
    liquidatedForEth: BigInt!
    liquidatedForUsd: BigInt!

    feeEth: BigInt! @deprecated
    feeUsd: BigInt! @deprecated
    endingEpoch: BigInt! @deprecated
    eth: BigInt! @deprecated
    ethUsd: BigInt! @deprecated
}

type User @entity {
    id: ID!

    shares: BigInt! #update
    nuggs: [Nugg!]! @derivedFrom(field: "user")

    offers: [Offer!]! @derivedFrom(field: "user")

    unclaimedOffers: [Offer!]! @derivedFrom(field: "claimer")

    loans: [Loan!]! @derivedFrom(field: "user")

    swaps: [Swap!]! @derivedFrom(field: "owner")
}

enum NextOfferType {
    Mint
    Commit
    Carry
    None
}

type ItemSwap @entity {
    id: ID!

    sellingNuggItem: NuggItem!
    sellingItem: Item!

    offers: [ItemOffer!]! @derivedFrom(field: "swap")

    epochId: String
    epoch: Epoch
    endingEpoch: BigInt
    startingEpoch: Epoch
    canceledEpoch: BigInt

    top: BigInt!
    topUsd: BigInt!
    startUnix: BigInt

    bottom: BigInt!
    bottomUsd: BigInt!

    commitBlock: BigInt

    nextDelegateType: NextOfferType!

    numOffers: Int!

    num: BigInt!

    eth: BigInt!
    ethUsd: BigInt!
    # incrementX64: BigInt!

    owner: Nugg!

    leader: Nugg
}
# todo - last price and offer inc
type ItemSnapshot @entity {
    id: ID!

    item: Item!

    chunkError: Boolean!

    chunk: String!
}

type NuggSnapshot @entity {
    id: ID!

    snapshotNum: Int!

    block: BigInt!

    user: User!

    nugg: Nugg!

    _items: [Int!]!
    _displayed: [Int!]!

    proof: BigInt

    chunkError: Boolean!

    chunk: String!
}

# type DotnuggItemChunk @entity {
#     id: ID!

#     index: Int!

#     snapshot: ItemSnapshot!

#     data: String!
# }

# type DotnuggChunk @entity {
#     id: ID!

#     index: Int!

#     snapshot: NuggSnapshot!

#     data: String!
# }

type NuggActiveItemSwap @entity {
    id: ID!

    activeId: ID!
}

type ItemOffer @entity {
    id: ID!

    txhash: String!
    swap: ItemSwap!
    nugg: Nugg!
    eth: BigInt!
    ethUsd: BigInt!
    incrementX64: BigInt!
    claimed: Boolean!
    owner: Boolean!
}
